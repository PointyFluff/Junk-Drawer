---
# Control machine init
# TODO: Add linode specific provisioning.
# TODO: Add tool chain
# TODO: Add & configure fail2ban
# TODO: Remove ICMP Ping 

- hosts: "*"
  vars:
    ansible_python_interpreter: /usr/bin/python3
    ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
  become: true
  remote_user: root

  tasks:
  
    - name: "Test connection"
      ping:

    - name: "Add wheel group"
      group:
        name: wheel
        state: present

    - name: "Add wheel group to sudoers"
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'

    - name: "Add user samuel"
      user:
        name: samuel
        comment: samuelbray@akaio.com
        append: yes
        create_home: yes
        groups: wheel
        
    - name: "Add user matt"
      user:
        name: matt
        comment: matt@akaio.com
        append: yes
        create_home: yes
        groups: wheel

    - name: "Add user bryce"
      user:
        name: bryce
        comment: bryce@akaio.com
        append: yes
        create_home: yes
        groups: wheel
    
    - name: "Add user deploy"
      user:
        name: deploy
        comment: App deployment user
        append: yes
        create_home: yes
        groups: wheel

    - name: "Add ssh key for samuel"
      authorized_key:
        user: samuel
        path: /home/samuel/.ssh/authorized_keys
        state: present
        key: "{{ lookup('file', 'keys/samuel_id.pub') }}"

    - name: "Add ssh key for matt"
      authorized_key:
        user: matt
        path: /home/matt/.ssh/authorized_keys
        state: present
        key: "{{ lookup('file', 'keys/matt_id.pub') }}"

    - name: "Add ssh key for bryce"
      authorized_key:
        user: bryce
        path: /home/bryce/.ssh/authorized_keys
        state: present
        key: "{{ lookup('file', 'keys/bryce_id.pub') }}"

    - name: "Add ssh key for deploy"
      authorized_key:
        user: deploy
        path: /home/deploy/.ssh/authorized_keys
        state: present
        key: "{{ lookup('file', 'keys/deploy_id.pub') }}"

    - name: "Change ssh port"
      lineinfile:
        dest: /etc/ssh/sshd_config
        state: present
        regexp: '^Port'
        line: 'Port 774'
        backup: yes

    - name: "Restrict ssh password login"
      lineinfile:
        dest: /etc/ssh/sshd_config
        state: present
        regexp: '^PasswordAuthentication'
        line: 'PasswordAuthentication no'
        backup: yes
      
    - name: "Restrict ssh root login"
      lineinfile:
        dest: /etc/ssh/sshd_config
        state: present
        regexp: '^PermitRootLogin'
        line: 'PermitRootLogin no'
        backup: yes
    
    - name: "Restart ssh"
      service:
        name: ssh
        state: restarted

- hosts: "*"
  vars:
    ansible_user: deploy
    ansible_port: 774
    ansible_ssh_private_key_file: keys/deploy_id
    ansible_python_interpreter: /usr/bin/python3
  become: true
  tasks:
  
    - name: "Ensure we can login to host as user \"deploy\" using SSH Key on 774"
      ping:

    - name: "Enable 774"
      ufw:
        rule: allow
        port: 774
        proto: tcp

    - name: "Connection rate limiting"
      ufw: 
        rule: limit
        port: 774
        proto: tcp

    - name: "Enable firewall logging"
      ufw:
        logging: on

    - name: "Deny all other"
      ufw:
        state: enabled
        policy: deny
...